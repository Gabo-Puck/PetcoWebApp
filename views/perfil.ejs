<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
        crossorigin="anonymous"></script>


    <script src="https://code.jquery.com/jquery-3.6.0.slim.js">
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js">
    </script>

    <link rel="stylesheet" , href="/stylesheets/style.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css"
        integrity="sha512-YWzhKL2whUzgiheMoBFwW8CKV4qpHQAEuvilg9FAn5VJUDwKZZxkJNuGM4XkWuk94WCrrwslk8yWNGmY1EduTA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= user[0].UsuarioRegistro.Nombre %>
    </title>
    <style>
        .contenedor {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(275px, 1fr));
            grid-gap: 2rem;
            margin: 2rem;
        }

        /* demo purposes only */

        * {
            font-family: "Poppins", sans-serif;
        }

        .carta {
            height: 215px;
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
            display: grid;
            grid-template-rows: 1fr 1fr;
            transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
        }

        h3 {
            color: white;
            font-size: 24px;
            margin: 20px 0 0 20px;

        }

        p {
            color: white;
            font-weight: 400;
            font-size: 16px;
            align-self: end;
            margin: 0 0 20px 20px;
            letter-spacing: 0.5px;
        }


        .carta:hover {
            transform: scale(1.035, 1.035);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);
        }

        .carta:hover img {
            transform: translateY(-10px);
        }

        img {
            position: absolute;
            top: 0;
            height: 110%;
            width: 100%;
            z-index: -1;
            transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
        }

        .wrapper {
            margin: 10px auto 2px;
            height: 10px;
            width: 100%;
            background: linear-gradient(to right, #D9534F 50%, #5CB85C 50%);
            border: 1px solid black;
            box-sizing: border-box;
            position: relative;
            overflow: hidden;
        }

        .blind {
            height: 100%;
            position: absolute;
            top: 0;
            background-color: rgb(51, 51, 51);
            min-width: 50%;
        }

        .blind.right {
            left: 50%;
            border-left: 1px solid white;
            transform-origin: left top;
        }

        .blind.left {
            border-right: 1px solid white;
            transform-origin: left top;
        }

        #buttons {
            text-align: center;
        }

        /* Ruler crap */

        .ruler-container {
            text-align: center;
        }

        .ruler,
        .ruler li {
            margin: 0;
            padding: 0;
            list-style: none;
            display: inline-block;
        }

        /* IE6-7 Fix */
        .ruler,
        .ruler li {
            *display: inline;
        }

        .ruler {
            display: inline-block;
            margin: 0 auto;
            background: lightYellow;
            box-shadow: 0 -1px 1em hsl(60, 60%, 84%) inset;
            border-radius: 2px;
            border: 1px solid #ccc;
            color: #ccc;
            height: 3em;
            padding-right: 1cm;
            white-space: nowrap;
            margin-left: 1px;
        }

        .ruler li {
            padding-left: 1cm;
            width: 2em;
            margin: .64em -1em -.64em;
            text-align: center;
            position: relative;
            text-shadow: 1px 1px hsl(60, 60%, 84%);
        }

        .ruler li:before {
            content: '';
            position: absolute;
            border-left: 1px solid #ccc;
            height: .64em;
            top: -.64em;
            right: 1em;
        }

        /* Extra styles for the cancel button */
.cancelbtn {
  width: auto;
  padding: 10px 18px;
  background-color: #f44336;
}

/* Center the image and position the close button */
.imgcontainer {
  text-align: center;
  margin: 24px 0 12px 0;
  position: relative;
}

img.avatar {
  width: 40%;
  border-radius: 50%;
}

.container {
  padding: 16px;
}

span.psw {
  float: right;
  padding-top: 16px;
}

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  padding-top: 60px;
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* The Close Button (x) */
.close {
  position: absolute;
  right: 25px;
  top: 0;
  color: #000;
  font-size: 35px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: red;
  cursor: pointer;
}

/* Add Zoom Animation */
.animate {
  -webkit-animation: animatezoom 0.6s;
  animation: animatezoom 0.6s
}

@-webkit-keyframes animatezoom {
  from {-webkit-transform: scale(0)} 
  to {-webkit-transform: scale(1)}
}
  
@keyframes animatezoom {
  from {transform: scale(0)} 
  to {transform: scale(1)}
}

/* Change styles for span and cancel button on extra small screens */
@media screen and (max-width: 300px) {
  span.psw {
     display: block;
     float: none;
  }
  .cancelbtn {
     width: 100%;
  }
}

    </style>

</head>

<body>


    <div class="container py-5 h-100">
        <div class="row">
            <div class="col-md-12 col-xl-4">

                <div class="card" style="border-radius: 15px;">
                    <div class="card-body text-center">
                        <div class="mt-3 mb-4">
                            <!-- Imagen -->
                            <img src="<%= user[0].Foto_Perfil %> " class=" img-fluid"
                                style="width: 100px; height: 100px; object-fit: cover; z-index:0; position: relative; top: auto;" />
                        </div>
                        <!-- Alguna descripcion -->
                        <h4 class="mb-1">
                            <%= user[0].UsuarioRegistro.Nombre %>
                        </h4>

                        <% if(user[0].UsuarioRegistro.Tipo_Usuario==1){ %>
                            <p class="text-muted mb-4">Organizacion <span class="mx-2"></span></p>
                            <% } else{ %>
                                <p class="text-muted mb-4">Usuario Comun <span class="mx-2"></span></p>
                                <% } %>

                                <!-- Reputacion -->
                                <p class="text-muted" style="float:left ;font-size: 50%; align-self:flex-start;">Poco confiable</p>

                                <p class="text-muted" style="float:right ;font-size: 50%;">Muy confiable</p>

                                <p class="text-muted" style="align-self: center; font-size: 50%;">Sin Criterio</p>

                                
                                <div class="wrapper">
                                    <div class='blind right'></div>
                                    <div class='blind left'></div>
                                </div>

                                    <!-- Butones -->
                                    <div class="mt-4 pb-2">

                                        <!-- Reportar -->
                                        <button type="button"
                                            class="btn btn-outline-primary btn-floating nav-item dropdown">

                                            <a class=" nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#"
                                                role="button" aria-haspopup="true" aria-expanded="false"><i
                                                    class="fa-regular fa-flag" style="color: #2FA1DA"></i></a>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item" id="Spam" aria-valuenow="5" href="#">Reportar
                                                    este usuario por Spam</a>
                                                <a class="dropdown-item" id="Odio" href="#">Este usuario incita al
                                                    odio</a>
                                                <a class="dropdown-item" id="Maltrato" href="#">El usuario promueve el
                                                    maltrato animal</a>
                                                <a class="dropdown-item" id="InformacionErronea" href="#">La informacion
                                                    que provee es erronea</a>
                                                <a class="dropdown-item" id="Ventas" href="#">Reportar por promocionar
                                                    ventas</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" id="Otro" href="#">Otro</a>
                                            </div>
                                            </li>

                                            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                                            <!-- Eventos -->
                                            <script>

                                                const R1 = document.querySelector("#Spam");
                                                const R2 = document.querySelector("#Odio");
                                                const R3 = document.querySelector("#Maltrato");
                                                const R4 = document.querySelector("#InformacionErronea");
                                                const R5 = document.querySelector("#Ventas");
                                                const R6 = document.querySelector("#Otro");

                                                R6.addEventListener("click", async () => {
                                                    const { value: text } = await Swal.fire({
                                                        input: 'textarea',
                                                        inputLabel: '¿Otro motivo?',
                                                        inputPlaceholder: 'Escribe el porque la plubicacion es inapropiada',
                                                        inputAttributes: {
                                                            'aria-label': 'Type your message here'
                                                        },
                                                        showCancelButton: true,
                                                        inputValidator: (value) => {
                                                            if (!value) {
                                                                return 'You need to write something!'
                                                            }
                                                        }

                                                    })
                                                    if (text) {
                                                        Reportar(text, 0);

                                                    }

                                                })

                                                R1.addEventListener("click", function () {
                                                    Swal.fire({
                                                        title: '¿Estas seguro que la publicacion infringe las normas?',
                                                        text: "La mayoria de los reportes son evaluados manualmente.",
                                                        icon: 'warning',
                                                        showCancelButton: true,
                                                        cancelButtonText: "Cancelar",
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        confirmButtonText: 'Si, estoy seguro.'
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            Reportar(R1.id, 1);

                                                        }
                                                    })
                                                });

                                                R2.addEventListener("click", function () {
                                                    Swal.fire({
                                                        title: '¿Estas seguro que la publicacion infringe las normas?',
                                                        text: "La mayoria de los reportes son evaluados manualmente",
                                                        icon: 'warning',
                                                        showCancelButton: true,
                                                        cancelButtonText: "Cancelar",
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        confirmButtonText: 'Si, estoy seguro.'
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            Reportar(R2.id, 3);

                                                        }
                                                    })
                                                });

                                                R3.addEventListener("click", function () {
                                                    Swal.fire({
                                                        title: '¿Estas seguro que la publicacion infringe las normas?',
                                                        text: "La mayoria de los reportes son evaluados manualmente",
                                                        icon: 'warning',
                                                        showCancelButton: true,
                                                        cancelButtonText: "Cancelar",
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        confirmButtonText: 'Si, estoy seguro.'
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            Reportar(R3.id, 5);

                                                        }
                                                    })
                                                });

                                                R4.addEventListener("click", function () {
                                                    Swal.fire({
                                                        title: '¿Estas seguro que la publicacion infringe las normas?',
                                                        text: "La mayoria de los reportes son evaluados manualmente",
                                                        icon: 'warning',
                                                        showCancelButton: true,
                                                        cancelButtonText: "Cancelar",
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        confirmButtonText: 'Si, estoy seguro.'
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            Reportar(R4.id, 2);

                                                        }
                                                    })
                                                });

                                                R5.addEventListener("click", function () {
                                                    Swal.fire({
                                                        title: '¿Estas seguro que la publicacion infringe las normas?',
                                                        text: "La mayoria de los reportes son evaluados manualmente",
                                                        icon: 'warning',
                                                        showCancelButton: true,
                                                        cancelButtonText: "Cancelar",
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        confirmButtonText: 'Si, estoy seguro.'
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            Reportar(R5.id, 3);

                                                        }
                                                    })
                                                });


                                                function Reportar(motivo, peso) {
                                                    //alert("El motivo es " + motivo + " Con un peso de " + peso + " A la piblicacion " + idPublicacion + " Del usuario " + idSession + " Al usuario " + idUsuarioPublicacion);

                                                    fetch(`/petco/publicacion/ReporteUsuario/${motivo}/${peso}/${"<%=idUsuarioPublicacion%>"}`)
                                                        .then((res) => res.json())
                                                        .then((res) => {
                                                            console.log(res);
                                                        })

                                                    Swal.fire('¡Reporte enviado!', '', 'success')

                                                }

                                            </script>

                                        </button>

                                        <!-- Donar -->
                                        
                        <% if(user[0].UsuarioRegistro.Tipo_Usuario==1){ %>
                            <button type="button" class="btn btn-outline-primary btn-floating donacion"  onclick="document.getElementById('id01').style.display='block'">
                                Donar <i class="fa-solid fa-hand-holding-dollar" ></i>
                            </button>

                           
                            <% } %>

                                    </div>
                                                            
                                    <div class="d-flex justify-content-between text-center mt-5 mb-2">
                                    </div>
                    </div>
                </div>

            </div>

            <div class="col">

                <div class="contenedor">

                    <% if(MascotaRender.length == 0){ %>
                        <p class="text-muted mb-0 justify-content-center" >Sin Publicaciones</p>
                        <% } %>


                    <div class="carta templateFeed" style="display: none;">
                        <a href="#" style="text-decoration: none;">
                            

                            <img src="https://thumbs.gfycat.com/MadeupWillingKronosaurus-max-1mb.gif"
                                style="object-fit: cover; height: 300px;" />
                            <h3 style="color: white;">Card tittle</h3>
                            <br>
                            <br>
                            <br>
                            <br>
                            <br>
                            <p style="background-color: rgba(0, 0, 0, 0.5); vertical-align: bottom;"><b>Estado:</b>
                                Oowo
                            </p>
                        </a>
                    </div>





                </div>
            </div>



        </div>
    </div>


    <!-- Barra de confianza -->

    <script>
        let currentPercentageState = 0;
        let easing = "cubic-bezier(0.5, 1, 0.89, 1)";
        let duration = 1000;
        let easeReversal = y => (1 - Math.sqrt((y - 1) / -1))

        function animate(percentage) {
            percentage = parseFloat(percentage);

            // determine if we've crossed the 0 threshold, which would force us to do something else here
            let threshold = currentPercentageState / percentage < 0;
            console.log("Crosses 0: " + threshold);

            if (!threshold && percentage != 0) {
                // determine which blind we're animating
                let blind = percentage < 0 ? "left" : "right";

                $(`.blind.${blind}`)[0].animate(
                    [
                        {
                            transform: `translateX(${currentPercentageState}%)`,
                            easing: easing
                        },
                        {
                            transform: `translateX(${percentage}%)`
                        }
                    ],
                    {
                        fill: "forwards",
                        duration: duration
                    }
                );
            } else {
                // this happens when we cross the 0 boundry
                // we'll have to create two animations - one for moving the currently offset blind back to 0, and then another to move the second blind
                let firstBlind = percentage < 0 ? "right" : "left";
                let secondBlind = percentage < 0 ? "left" : "right";

                // get total travel distance
                let delta = currentPercentageState - percentage;

                // find the percentage of that travel that the first blind is responsible for
                let firstTravel = currentPercentageState / delta;
                let secondTravel = 1 - firstTravel;

                console.log("delta; total values to travel: ", delta);
                console.log(
                    "firstTravel; percentage of the total travel that should be done by the first blind: ",
                    firstTravel
                );
                console.log(
                    "secondTravel; percentage of the total travel that should be done by the second blind: ",
                    secondTravel
                );

                // animate the first blind.
                $(`.blind.${firstBlind}`)[0].animate(
                    [
                        {
                            transform: `translateX(${currentPercentageState}%)`,
                            easing: easing
                        },
                        {
                            // we go towards the target value instead of 0 since we'll cut the animation short
                            transform: `translateX(${percentage}%)`
                        }
                    ],
                    {
                        fill: "forwards",
                        duration: duration,
                        // cut the animation short, this should run the animation to this x value of the easing function
                        iterations: easeReversal(firstTravel)
                    }
                );

                // animate the second blind
                $(`.blind.${secondBlind}`)[0].animate(
                    [
                        {
                            transform: `translateX(${currentPercentageState}%)`,
                            easing: easing
                        },
                        {
                            transform: `translateX(${percentage}%)`
                        }
                    ],
                    {
                        fill: "forwards",
                        duration: duration,
                        // start the iteration where the first should have left off. This should put up where the easing function left off
                        iterationStart: easeReversal(firstTravel),
                        // we only need to carry this aniamtion the rest of the way
                        iterations: 1 - easeReversal(firstTravel),
                        // delay this animation until the first "meets" it
                        delay: duration * easeReversal(firstTravel)
                    }
                );
            }
            // save the new value so that the next iteration has a proper from keyframe
            currentPercentageState = percentage;
        }

        // the following are just binding set ups for the buttons

        $(document).ready(function () {
            $(".apply").click(function () {
                animate($("#amount").val());
            });

            $(".reset").click(function () {
                animate(0);
            });

            $(".random").click(function () {
                var val = (Math.random() * 2 - 1) * 100;
                $("#amount").val(val);
                animate(val);
            });

            $(".randomPos").click(function () {
                var val = Math.random() * 100;
                $("#amount").val(val);
                animate(val);
            });

            $(".randomNeg").click(function () {
                var val = Math.random() * -100;
                $("#amount").val(val);
                animate(val);
            });

            $(".flipSign").click(function () {
                animate(currentPercentageState * -1);
            });

            $(".toggleBlinds").click(function () {
                $(".blind").toggle();
            });

            $(".toggleLeft").click(function () {
                $(".blind.left").toggle();
            });

            $(".toggleRight").click(function () {
                $(".blind.right").toggle();
            });
        });
       
        //setTimeout(()=>animate(-100), 1050)

        $(function () {
            // Build "dynamic" rulers by adding items
            $(".ruler[data-items]").each(function () {
                var ruler = $(this).empty(),
                    len = Number(ruler.attr("data-items")) || 0,
                    item = $(document.createElement("li")),
                    i;

                for (i = -11; i < len - 11; i++) {
                    ruler.append(item.clone().text(i + 1));
                }
            });
            // Change the spacing programatically
            function changeRulerSpacing(spacing) {
                $(".ruler")
                    .css("padding-right", spacing)
                    .find("li")
                    .css("padding-left", spacing);
            }

            changeRulerSpacing("30px");
        });


        var template = document.querySelector(".templateFeed"); //Se obtiene el formato del comentario de un template
        let banLoad = false;
        const Mlenght = '<%=MascotaRender.length%>';
        const MascotaJS = <%-JSON.stringify(MascotaRender) %>;
    
    
        let contador = 0;
        let insert = 4;

        
        //[Primera carga]
        if (MascotaJS != undefined)
        {

        window.onload = function () { //Se ejecuta al terminar de cargar la pagina
          //Determinar longitud principal
          animate('<%=user[0].Reputacion%>');

          let InitialLoading = 0;
    
          if (Mlenght < 6) {
            InitialLoading = Mlenght;
            banLoad = false;
          }
          else {
            InitialLoading = 6;
            banLoad = true
          }
    
          for (let i = 0; i < InitialLoading; i++) {
    
            let tarjeta2 = template.cloneNode(true); //se clona un elemento
            tarjeta2.querySelector('h3').innerText = MascotaJS[contador].Nombre;
            tarjeta2.querySelector('img').src = MascotaJS[contador].MascotasImagenes[0].Ruta;
            tarjeta2.querySelector('p').innerText = MascotaJS[contador].MascotasEstado.Estado_Nombre;
            tarjeta2.querySelector('a').href='/petco/publicacion/adopciones/' + MascotaJS[contador].MascotasPublicacion.ID;
    
    
            switch (MascotaJS[contador].MascotasEstado.ID) {
              case 1:
              tarjeta2.querySelector('p').classList.add('text-success')
                break;
              case 2:
              tarjeta2.querySelector('p').classList.add('text-warning')
    
                break;
              case 3:
              tarjeta2.querySelector('p').classList.add('text-warning')
    
                break;
    
                case 4:
              tarjeta2.querySelector('p').classList.add('text-danger')
    
                break;
              default:
                break;
            }
    
            
            tarjeta2.style.display = 'block'// se hace visible 
            document.querySelector('.contenedor').appendChild(tarjeta2);
            contador++;
    
          }


          
        }
    }



        window.onscroll = function (ev) {

          console.log(Mlenght - contador);
          if ((Mlenght - contador) < 0) {
            console.log('Muy chiquito');
            banLoad = false;
          }
    
          if (Mlenght - contador < 4) {
    
            insert = Mlenght - contador;
          }
    
          if ((window.innerHeight + window.scrollY) >= document.body.scrollHeight && banLoad == true) {
            // you're at the bottom of the page
            //alert("Bottom of page");
            for (let i = 0; i < insert; i++) {
              let tarjeta2 = template.cloneNode(true); //se clona un elemento con las caracteristicas de un comentario

              tarjeta2.querySelector('h3').innerText = MascotaJS[contador].Nombre;
              console.log(MascotaJS[contador].MascotasImagenes[0].Ruta);

              tarjeta2.querySelector('img').src = MascotaJS[contador].MascotasImagenes[0].Ruta;
              tarjeta2.querySelector('p').innerText = MascotaJS[contador].MascotasEstado.Estado_Nombre;
              tarjeta2.querySelector('a').href='/petco/publicacion/adopciones/' + MascotaJS[contador].MascotasPublicacion.ID;
    
              switch (MascotaJS[contador].MascotasEstado.ID) {
              case 1:
              tarjeta2.querySelector('p').classList.add('text-success')
                break;
              case 2:
              tarjeta2.querySelector('p').classList.add('text-warning')
    
                break;
              case 3:
              tarjeta2.querySelector('p').classList.add('text-warning')
    
                break;
    
                case 4:
              tarjeta2.querySelector('p').classList.add('text-danger')
    
                break;
              default:
                break;
            }
    
              tarjeta2.style.display = 'block'// se hace visible el comentario
              document.querySelector('.contenedor').appendChild(tarjeta2);
              contador++;
    
            }
    
            console.log("🚀 ~ file: feed.ejs ~ line 147 ~ contador", contador)
    
          }
    
    
    
    
        };
    
    
    
    </script>

    <!-- Donaciones -->
    <div id="id01" class="modal">
  
        <form class="modal-content animate" action="/petco/perfil/donarperfilP/" method="post">
         
          <div class="container" style="text-align:center ;">

            
            <div class="form-group">
                <label for="exampleSelect1" class="form-label mt-4">Seleccione la cantidad a donar</label>
                <select class="form-select" name="cantidad">
                  <option>100.00</option>
                  <option>200.00</option>
                  <option>300.00</option>
                  <option>400.00</option>
                  <option>500.00</option>
                </select>
              </div>
      
            
              
            <button class="btn btn-primary mt-3" type="submit">Donar <i class="fa-regular fa-circle-check"></i></button>
            
          </div>
      
          <div class="container" style="background-color:#f1f1f1">
            <button class="btn btn-danger" type="button" onclick="document.getElementById('id01').style.display='none'" class="cancelbtn">Cancelar <i class="fa-solid fa-xmark"></i> </button>
          </div>

        </form>
      </div>
      
      <script>
      // Get the modal
      var modal = document.getElementById('id01');
      
      // When the user clicks anywhere outside of the modal, close it
      window.onclick = function(event) {
          if (event.target == modal) {
              modal.style.display = "none";
          }
      }
      </script>
    



    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js" type="text/javascript"></script>


</body>

</html>