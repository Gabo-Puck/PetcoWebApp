<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, height=device-height initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" , href="/stylesheets/style.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
      integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
      crossorigin="anonymous"
    ></script>

    <!-- Latest compiled and minified CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css"
      crossorigin="anonymous"
    />

    <!-- Latest compiled and minified JavaScript -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"
      crossorigin="anonymous"
    ></script>
    <script>
      $.fn.selectpicker.Constructor.BootstrapVersion = "4";
    </script>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>

  <body>
    <style>
      .custom-loader {
        animation: none !important;
        border-width: 0 !important;
      }
      .custom-file-input ~ .custom-file-label::after {
        content: "Subir";
        background-color: cadetblue;
        color: white;
      }
    .custom-file-label {
      overflow: hidden;
    }
 
    </style>
    <!-- <div style="height: 100vh;"> -->

      <div class="card border-info container-fluid my-5" style="width: 85%; margin: auto">
        <h1 class="d-flex justify-content-center mt-5 mb-6 card-title"><%=title%></h1>
        <div class="card-body">
          <form
            class="card bg-light px-5 "
            
            method="POST"
            enctype="multipart/form-data"
          >
            <div id="Formulario">
              <div id="PrimeraParte">
                <div class="d-flex justify-content-center mt-3">
                  <h3>Tipo de cuenta:</h3>
                </div>
                <div class="mb-3 mx-auto form-row tipos">
                  <div class="col">
                    <div class="d-flex justify-content-center">
                      <label for="Tipo1">Organizacion</label>
                    </div>
                    <input
                      id="Tipo1"
                      class="form-control"
                      type="radio"
                      placeholder=""
                      name="Tipo"
                      checked
                      value="1"
                    />
                  </div>
                  <div class="col" id="me">
                    <div class="d-flex justify-content-center">
                      <label for="Tipo2">Común</label>
                    </div>
                    <input
                      class="form-control"
                      type="radio"
                      placeholder=""
                      name="Tipo"
                      id="Tipo2"
                      value="2"
                    />
                    
                  </div>
                </div>
                <div class="form-row">
                  <div class="col">
                    <label for="Nombre">Nombre:</label>
                    <input
                      id="Nombre"
                      class="form-control"
                      type="text"
                      placeholder=""
                      name="Nombre"
                      value=""
                    />
                    
                  </div>
    
                  <div class="col-md-4 apellido">
                    <label for="ApellidoP">Apellido Paterno</label>
                    <input
                      id="ApellidoP"
                      class="form-control"
                      type="text"
                      placeholder=""
                      name="ApellidoP"
                      value=""
                    />
                  </div>
    
                  <div class="col-md-4 apellido">
                    <label for="ApellidoM">Apellido Materno</label>
                    <input
                      id="ApellidoM"
                      class="form-control"
                      type="text"
                      placeholder=""
                      name="ApellidoM"
                      value=""
                    />
                  </div>
                </div>
    
                <div id="correoForm" class="form-row">
                  <div class="col">
                    <label for="Correo">Correo</label>
                    <input
                      id="Correo"
                      class="form-control"
                      type="email"
                      placeholder="miura@gmail.com"
                      name="Correo"
                      value=""
                    />
                  </div>
                </div>
                <div class="form-row">
                  <div class="col">
                    <label for="Telefono">Telefono:</label>
                    <input
                      id="Telefono"
                      class="form-control"
                      type="tel"
                      placeholder="3323980011"
                      name="Telefono"
                      value=""
                    />
                  </div>
                  <div class="col">
                    <label for="Contrasena">Contraseña</label>
                    <input
                      id="Contrasena"
                      class="form-control"
                      type="password"
                      placeholder="123456789"
                      name="Contrasena"
                      value=""
                    />
                  </div>
                </div>
                <div class="mt-3 form-row d-flex justify-content-around">
                  <div class="col-md-6 mb-5">
                    <label for="Estado" class="form-label" style="display: none"
                      >Estado:</label
                    >
                    <div class="input-group has-validation">
                      <span class="input-group-text">Estado</span>
                      <select class="custom-select" id="Estado">
                        <% if(EstadosMunicipios)%> <%
                        EstadosMunicipios.forEach(estado=>{%>
                        <option value="<%=estado.ID%>"><%=estado.Nombre%></option>
                        <%})%>
                      </select>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <label for="Municipio" class="form-label my-2" style="display: none"
                      >Municipio:</label
                    >
                    <div class="input-group">
                      <span class="input-group-text">Municipio</span>
                      <select class="custom-select" name="Municipio" id="Municipio">
                        <% if(EstadosMunicipios)%> <%
                        EstadosMunicipios[0].municipios.forEach(municipio=>{ %>
                        <option value="<%=municipio.ID%>">
                          <%=municipio.Nombre%>
                        </option>
                        <%})%>
                      </select>
                    </div>
                  </div>
                </div>
                <label for="DocumentoIdentidad"></label>
                <p id="messages"></p>
                <div class="d-flex justify-content-end">
                  <button
                    id="nextButton"
                    class="btn btn-info my-4"
                    type="button"
                    formenctype="multipart/form-data">
                    Siguiente
                  </button>
                </div>
              </div>
              <div id="errorsBox"></div>
              <div id="SegundaParte" class="pt-3" style="display: none">
                <div class="d-flex justify-content-center mb-1"><h4>Sube tus fotografías</h4></div>
                <div class="form-row" id="TipoComun">
                    <div class="row d-flex flex-column align-items-center align-content-center" style="width: 100%">
                      <div class="form-row d-flex justify-content-center my-2">
                          Fotografía INE parte frontal
                        </p>
                      </div>
                      <div class="form-row d-flex justify-content-center">
                        <img
                          id="Preview_Identidad_Front"
                          class="my-3"
                          style="max-width: 95%;"
                          src=""
                          alt=""
                        />
                      </div>
                      
                        <div class="form-group d-flex justify-content-center">
                          <div class="custom-file flex-wrap" style="width: 100%;">
                            <input
                              id="Documento_Identidad_Front"
                              type="file"
                              class="custom-file-input"
                              placeholder=""
                              name="Documento_Identidad2"
                              value=""/>
                            <label class="custom-file-label" for="Documento_Identidad2">Selecciona un archivo...</label>
                          </div>
                        </div>
                      
                    </div>
                    <div class="row d-flex flex-column align-items-center align-content-center" style="width: 100%">
                      <div class="form-row d-flex justify-content-center my-2">
                        Fotografía INE parte trasera
                      </div>
                      <div class="form-row d-flex justify-content-center">
                        <img id="Preview_Identidad_Back" class="my-3" style="max-width: 95%;"src="" alt="" />
                      </div>
                      <div class="form-group d-flex justify-content-center">
                          <div class="custom-file" style="width: 100%;">
                              <input
                              id="Documento_Identidad_Back"
                              class="custom-file-input"
                              type="file"
                              placeholder=""
                              name="Documento_Identidad3"
                              value=""/>
                              <label class="custom-file-label" for="Documento_Identidad_Back">Selecciona un archivo...</label>
                              <!-- <div class="invalid-feedback" >
                                    Prueba2
                              </div> -->
                          </div>
                      </div>
                    </div>
                </div>
                <div id="TipoOrg">
                  <div class="row d-flex flex-column align-items-center align-content-center" style="width: 100%">
                    <div class="form-row d-flex justify-content-center my-2">
                      Fotografía CIF o Factura
                    </div>
                    <div class="form-row d-flex justify-content-center">
                      <img id="PreviewOrg" class="my-3" style="max-width: 95%;" src="" alt="" />
                    </div>
                    <div class="form-group d-flex justify-content-center">
                      <div class="custom-file" style="width: 100%;">
                        <input
                        id="Documento_Identidad_Org"
                        class="custom-file-input"
                        type="file"
                        placeholder=""
                        name="DocumentoOrg"
                        value=""/>
                        <label class="custom-file-label" for="Documento_Identidad_Org">Selecciona un archivo...</label>
                        <!-- <p>
                          <div class="invalid-feedback">
                            "Prueba"
                          </div>

                        </p> -->
                      </div>
                    </div>
                  </div>
                </div>
                <div class="d-flex justify-content-end">
                  <button id="submitButton" class="btn btn-info my-6" type="button">
                    Enviar
                  </button>
                </div>
    
              </div>
            </div>
          </form>
        </div>
    </div>
    <!-- </div> -->


  </body>

  

  <script>
    const EstadoSelector = document.getElementById("Estado");
    const MunicipioSelector = document.getElementById("Municipio");
    const TiposDiv = document.getElementsByClassName("tipos")[0];
    const InputFileOrg = document.getElementById("Documento_Identidad_Org");
    const InputFileINEFrontal = document.getElementById(
      "Documento_Identidad_Front"
    );
    const InputFileINETrasera = document.getElementById(
      "Documento_Identidad_Back"
    );
    const PreviewOrg = document.getElementById("PreviewOrg");
    const PreviewComunFrente = document.getElementById(
      "Preview_Identidad_Front"
    );
    const PreviewComunTrasera = document.getElementById(
      "Preview_Identidad_Back"
    );
    const Nombre = document.getElementById("Nombre");
    const nextButton = document.getElementById("nextButton");
    const submitButton = document.getElementById("submitButton");
    const primeraParte = document.getElementById("PrimeraParte");
    const segundaParte = document.getElementById("SegundaParte");
    const errorsBox = document.getElementById("errorsBox");
    // const a = document.createElement();
   

    var timeOut = 900;

    InputFileOrg.addEventListener("change", (e) => {
      var nextSibling = e.target.parentElement.querySelector("label");
      if (InputFileOrg.value !== "") {//Cuando se sube una foto se carga una preview de lo que se subió
        var nameFile = InputFileOrg.files[0].name;
        nextSibling.innerText = nameFile;
        previewImage(PreviewOrg, InputFileOrg);
      } else {//Si al realizar el cambio, el valor quedo como "", volvemos a renderizar el preview
        PreviewOrg.src = "";
        nextSibling.innerText = "Selecciona un archivo...";
      }
    });

    window.onload = () => {
      resizeSelector();
      resizeSelector(EstadoSelector);
      onClickTipos();
    };

    function displayConfirmation() {
      loadingScreen.close();
      Swal.fire(
        {
          title: 'Listo!',
          text: `Registro completado correctamente, ${document.querySelector('#Nombre').value}`,
          icon: 'success',
          confirmButtonText: "Siguiente"
        }
      ).then(sweetResult=>{if(sweetResult.isConfirmed){window.location="http://localhost:3000/registro/info"}})
    }

    function sendData(formData, inputFiles) {
      let xhrSubmit = new XMLHttpRequest();
      inputFiles.forEach((inputFile) => {
        if (inputFile.value !== "")
          formData.append(inputFile.name, inputFile.files[0]);
      });

      xhrSubmit.onreadystatechange = function () {
        if (xhrSubmit.readyState === 4) {
          console.log(JSON.stringify(xhrSubmit.response));
          setTimeout(function(){
            var errors = JSON.parse(xhrSubmit.response).errors;
              if (errors) {
                renderMessages(errors);
              } else {
                displayConfirmation();
              }
          },timeOut)

        }
      };
      xhrSubmit.onerror = function (){
        // errorScreen.fire();
      }
      xhrSubmit.open("POST", "http://localhost:3000/registro/crear");
      xhrSubmit.send(formData);
    }

    submitButton.addEventListener("click", function () {
      let xhr = new XMLHttpRequest();//Crear request
      let formData = new FormData();//Crear FormData para almacenar los datos a mandar en la request
      var inputRadio = document.querySelector("input:checked");//Obtenemos los radio checked
      var inputSelector = document.querySelector("#Municipio");

      var inputText = document.querySelectorAll(
        'input:not(input[type="file"]):not(input[type="radio"])'
      );//Obtenemos los input que no son file ni radio
      var inputFiles = document.querySelectorAll('input[type="file"]');
      formData.append(inputRadio.name, inputRadio.value);//Agregamos los datos al form Data (nombre_en_request,dato)
      formData.append(
        inputSelector.name,
        inputSelector.selectedOptions[0].value
      );
      chargeInputToFormData(formData, inputText);//Cargamos al formData todos los datos del input text
      var data = [];//Array que almacena la extensión de los archivos que se suben
      inputFiles.forEach((inputFile) => {
        // if (inputFile.value !== "") {
          if(inputFile.files.length > 0){
            var extension = "." + inputFile.files[0].type.split("/")[1];
            data.push({ ext: extension, formName: inputFile.name });
          }else{
            data.push({ext:"",formName:inputFile.name});
          }
        // }
      });
      formData.append("fileExt", JSON.stringify(data));//Antes de mandar objetos objetos de javascript, hay que serializarlos
      xhr.upload.onloadstart = function (e) {//Especificamos el listener del objeto xhr. Hace trigger cuando se empieza a realizar la request al server
        loadingScreen.fire();//Cargamos la pantalla de carga
      };
      xhr.onreadystatechange = function () {//Especificamos el listener del objeto xhr. Hace trigger cuando el state de la request cambia
          if (xhr.readyState === 4) {
            console.log(JSON.stringify(xhr.response));
            var errors = JSON.parse(xhr.response).errors;//Obtenemos los errores que devuelva el server. Si no hay errores errors == undefined
            var correctFields = JSON.parse(xhr.response).correct;
            if (errors) {//Si es undfined se cierra la pantalla de carga y se renderizan los errores obtenidos
              loadingScreen.close();
              renderMessages(errors,correctFields);
            } else {//Si no es undefined se manda a llamar "sendData", que manda todos los datos
              sendData(formData, inputFiles);
            }
          }
        };
      xhr.open("POST", "http://localhost:3000/registro/verify", true);//Especificamos que tipo de request se va a hacer, el uri y si es sincrono o asincrona.
      xhr.send(formData);//Mandamos la información del form data
    });

    InputFileINEFrontal.addEventListener("change", function (e) {//Agregamos listener al input file de la ine frontal. Hace trigger cuando se hace un cambio en su valor
      var nextSibling = e.target.parentElement.querySelector("label");
      if (InputFileINEFrontal.value !== "") {//Cuando se sube una foto se carga una preview de lo que se subió
        var nameFile = InputFileINEFrontal.files[0].name;
        nextSibling.innerText = nameFile;
        previewImage(PreviewComunFrente, InputFileINEFrontal);
      } else {//Si al realizar el cambio, el valor quedo como "", volvemos a renderizar el preview
        PreviewComunFrente.src = "";
        nextSibling.innerText = "Selecciona un archivo...";
      }
    });
    InputFileINETrasera.addEventListener("change", (e) => {
      var nextSibling = e.target.parentElement.querySelector("label");
      if (InputFileINETrasera.value !== "") {
        var nameFile = InputFileINETrasera.files[0].name;
        nextSibling.innerText = nameFile;
        previewImage(PreviewComunTrasera, InputFileINETrasera);
      } else {
        PreviewComunTrasera.src = "";
        nextSibling.innerText = "Selecciona un archivo...";
      }
    });

    function insertAfter(referenceNode,newNode){
      if(referenceNode.type=="file"){
        referenceNode = referenceNode.parentNode.parentNode;
      }
      referenceNode.parentNode.insertBefore(newNode,referenceNode.nextSibling);
    }

    function renderMessages(errors,correctFields=null) {//Funcion encargada de renderizar errores de los input
      if (errorsBox.hasChildNodes) {//Si hay errores previos, los borramos
        $("#errorsBox").empty();
      }
      
      document.querySelectorAll("input").forEach(inputElement=>{
        inputElement.classList.remove("is-invalid");
        inputElement.classList.remove("is-valid");
      }
      );
      document.querySelectorAll("select").forEach(inputElement=>{
        inputElement.classList.remove("is-invalid");
        inputElement.classList.remove("is-valid");
      })
      document.querySelectorAll(".valid-feedback").forEach(feedBackElement=>{
        feedBackElement.remove();
      })
      document.querySelectorAll(".invalid-feedback").forEach(feedBackElement=>{
        feedBackElement.remove();
      })
      

      if(correctFields!==null){
        correctFields.forEach(element => {
          var IsValidDiv = document.createElement("div");
          var input = document.querySelector(`input[name='${element}']:not(input[type="radio"])`);
          // var selector = document.querySelector(`select[name='${element}'`);
          IsValidDiv.classList.add("valid-feedback");
          IsValidDiv.classList.add("d-block");
          IsValidDiv.innerText="Bien!";
          if(input){
            input.classList.add("is-valid");
            insertAfter(input,IsValidDiv);
          }
          // if(selector){
          //   selector.classList.add("is-valid");
          //   insertAfter(selector,IsValidDiv);
          // }
        });
      }

      
      errors.forEach((element) => {//Iteramos sobre todos los errores generados

        if (element.msg !== "") {//Si el mensaje del error esta vacio, omitimos su impresión
          var IsInvalidDiv = document.createElement("div");
          IsInvalidDiv.classList.add("invalid-feedback");
          IsInvalidDiv.classList.add("d-block");
          IsInvalidDiv.innerHTML = element.msg;
          var InvalidInput = document.querySelector(`input[name='${element.formName}']`);
          insertAfter(InvalidInput,IsInvalidDiv);
        }
        document.querySelector(//Cambiamos el color del input asociado al error
          `input[name='${element.formName}']`
        ).classList.add("is-invalid");
      });
     
    }


    function renderNext() {//Esta funcion renderiza la siguiente parte del formulario
      var inputRadio = document.querySelector("input:checked");
      primeraParte.style.display = "none";
      segundaParte.style.display = "block";
      $("#errorsBox").empty();
      if (inputRadio.value == 1) {//Dependiendo del valor de inputRadio mostramos ciertas opciones
        document.querySelector("#TipoComun").style.display = "none";
        document.querySelector("#TipoOrg").style.display = "block";
      }
      if (inputRadio.value == 2) {
        document.querySelector("#TipoOrg").style.display = "none";
        document.querySelector("#TipoComun").style.display = "block";
      }
    }

    function addListeners(xhr,swalAlert,onSuccess){
      xhr.upload.onloadstart = function (e) {

        swalAlert.fire();
      };
      xhr.upload.onprogress = function (e) {

      };
      xhr.upload.onloadend = function (e) {
        // progressBar.classList.remove("visible");
        console.log(xhr.response);
        // messages.textContent = "Finalizado!!";
      };

      xhr.onreadystatechange = function () {
        var isError = false;
        if((xhr.status >= 400 && xhr.status <=499)||(xhr.status >= 500 && xhr.status <= 599)){
          errorScreen.fire({html: "Ha sucedido un error con tu solicitud \n Intentalo más tarde",});
          console.log(xhr.status);
          isError=true;
        }
        if (xhr.readyState === 4 && !isError) {
          setTimeout(function(){
            swalAlert.close();
            console.log(xhr.status);
            console.log(JSON.stringify(xhr.response));
            var errors = JSON.parse(xhr.response).errors;
            var correctFields = JSON.parse(xhr.response).correct;
            if (errors) {
              renderMessages(errors,correctFields);
            } else {
              document.querySelectorAll("input[type='file']").forEach((inputElement)=>inputElement.classList.remove('is-valid'))
              onSuccess();
            }
          },timeOut);
        }
        if(xhr.readyState===4 && isError){
          swalAlert.close();
          errorScreen.fire({html: "Ha sucedido un error con tu solicitud \n Intentalo más tarde",});
        }

      };

      xhr.onerror = function(){
        console.log("mal");
        errorScreen.fire();
      }
    }

    //creamos la pantalla de error, mediante sweetalert2
    var errorScreen = Swal.mixin({
      title: 'Error!',
      html: "Ha sucedido un error con tu solicitud. \n Intentalo más tarde",
      icon:"error",
      confirmButtonText: "Ok",
      allowOutsideClick: false,
      didOpen: ()=>{
        if(loadingScreen.isLoading()){
          loadingScreen.close();
          errorScreen.fire();
        }
      }
    });
    //creamos el la pantalla de carga, mediante sweetalert2

    var loadingScreen = Swal.mixin({
        title: 'Espera...!',
        html: ':)',
        loaderHtml: '<div class="spinner-border text-primary"></div>',
        allowOutsideClick: false,
        customClass:{
          loader:"custom-loader"
        },
        loaderHtml:'<div class="spinner-grow text-primary" role="status"><span class="sr-only">Loading...</span></div>',
        didOpen: () =>{
            loadingScreen.showLoading();
        },
        });

    //Agregamos un listener al nextButton. Hace trigger cuando se da click al boton
    nextButton.addEventListener("click", function (e) {
      let xhr = new XMLHttpRequest();//Creamos un objeto XMLHttpRequest para realizar una request
      let formData = new FormData();//Creamos un objeto formData
      addListeners(xhr,loadingScreen,renderNext);//Agregamos listeners al xhr
      var inputRadio = document.querySelector("input:checked");//Obtenemos los input que estan checked
      var inputSelector = document.querySelector("#Municipio");//Obtenemos la id del municipio

      var inputText = document.querySelectorAll(
        'input:not(input[type="file"]):not(input[type="radio"])'
      );//Obtenemos todos los input que no son del tipo file ni radio
      var inputFiles = document.querySelectorAll('input[type="file"]');//Obtenemos todos los input del tipo file
      formData.append(inputRadio.name, inputRadio.value);//Agregamos los datos de los input recabados anteriormente
      formData.append(
        inputSelector.name,
        inputSelector.selectedOptions[0].value
      );
      chargeInputToFormData(formData, inputText);

      xhr.open("POST", "http://localhost:3000/registro/verify", true);//Especificamos que tipo de request se va a hacer, el uri y si es sincrono o no
      xhr.send(formData);

    });

    function chargeInputToFormData(formData, input) {//Función que carga input al formData
      input.forEach((element) => {
        if (element.name !== "") {//Si el input no tiene nombre definido, lo omitimos
          formData.append(element.name, element.value);
        } else {
          console.log(`Es ${element.name}`);
        }
      });
    }

    function onClickTipos() {//Función que renderiza y oculta elementos segun el tipo seleccionado
      let activeType = document.querySelector(
        'input[name="Tipo"]:checked'
      ).value;
      const TipoComunBox = document.getElementById("TipoComun");
      const TipoOrgBox = document.getElementById("TipoOrg");
      const ApellidoBox = document.getElementsByClassName("apellido");
      const NombreLabel = document.getElementById("NombreLabel");
      const ApellidoP = document.getElementById("ApellidoP");
      const ApellidoM = document.getElementById("ApellidoM");
      const Nombre = document.getElementById("Nombre");
      Nombre.value = "";

      if (activeType == 1) {
        //- Tipo Organizacion
        TipoOrgBox.style.display = "block";
        TipoComunBox.style.display = "none";
        InputFileOrg.name = "DocumentoOrg"
        InputFileINEFrontal.name="NULO";
        InputFileINETrasera.name="NULO";
        InputFileINEFrontal.value = "";
        InputFileINETrasera.value = "";
        ApellidoBox[0].style.display = "none";
        ApellidoBox[1].style.display = "none";
        ApellidoP.value = "";
        ApellidoM.value = "";
        ApellidoP.name = "";
        ApellidoM.name = "";
        Nombre.placeholder = "Nombre de tu Organización";
        PreviewOrg.src = "";
      }
      if (activeType == 2) {
        //- Tipo Comun
        InputFileOrg.name = "NULO"
        InputFileINEFrontal.name="Documento_Identidad2";
        InputFileINETrasera.name="Documento_Identidad3";
        TipoOrgBox.style.display = "none";
        TipoComunBox.style.display = "block";
        InputFileOrg.value = "";
        ApellidoBox[0].style.display = "block";
        ApellidoBox[1].style.display = "block";
        Nombre.placeholder = "Nombre de tu INE";
        ApellidoP.placeholder = "Apellido paterno de tu INE";
        ApellidoM.placeholder = "Apellido materno de tu INE";
        PreviewComunFrente.src = "";
        PreviewComunTrasera.src = "";
        ApellidoP.name = "ApellidoP";
        ApellidoM.name = "ApellidoM";
      }
    }

    function previewImage(imgElement, inputFile) {//Función que renderiza la imagen subida por el usuario
      const [file] = inputFile.files;
      if (file) {
        imgElement.src = URL.createObjectURL(file);
      }
    }

    TiposDiv.addEventListener("click", (event) => {//Agregamos un listener al contenedor de los div y ejecutar onClickTipos()
      onClickTipos();
    });
    /*
    *Agregamos un listener al selector de Estado. Hace trigger cuando el usuario selecciona un valor
    */
    EstadoSelector.addEventListener("change", (event) => {
      //Vaciamos el selector de Municipio para poder agregar los correspondientes al estado seleccionado
      $("#Municipio").empty();
      //Serializamos el objeto EstadosMunicipios de la respuesta que recibimos del server al cargar el archivo html inicialmente
      var EstadosMunicipiosSerialized = <%-JSON.stringify(EstadosMunicipios)%>;
      //Iteramos con un for para agregar los municipios correspondientes a MunicipioSelector
      for (let municipiosindex = 0;municipiosindex < EstadosMunicipiosSerialized[event.target.value - 1].municipios.length;municipiosindex++) {
        const option = document.createElement("option");//Creamos un elemento option
        option.value = EstadosMunicipiosSerialized[event.target.value - 1].municipios[municipiosindex].ID;//Agregamos al atributo "value" de el elemento option el valor ID del municipio
        /*Nota: event es un objeto que se recibe en la función que se indica para el listener. Este objeto tiene varias propiedades, como "target" que es el elemento html
        al cual se le hizo click al hacer. A su vez los elementos html también tienen propiedades dependiendo de que elemento. En este caso "value" es una propiedad propia de
        varios elmentos, principalemnte de input o en este caso option de los selector*/
        option.innerHTML =
        EstadosMunicipiosSerialized[event.target.value - 1].municipios[municipiosindex].Nombre;//Agregamos el nombre del municipio a la propiedad innerHTML del option creado
        MunicipioSelector.appendChild(option);//Agregamos al municipio selector el option que creamos
      }
      resizeSelector(event.target);
      resizeSelector();
    });
    MunicipioSelector.addEventListener("change", (event) => {
      resizeSelector(event.target);
    });

    /*Esta funcion cambia de manera dinámica el tamaño de un selector conforme a una opción seleccionada para abarcar la totalidad del texto seleccionado
     * Si no se proporciona ningun parametro se utilizará de manera predefinida el MunicipioSelector
     *
     */

    function resizeSelector(event = MunicipioSelector) {
      // const selectHidden = document.createElement("select");//Creamos un elemento select
      // // selectHidden.classList.add("custom-select");
      // console.log(selectHidden.className);
      // const optionHidden = document.createElement("option");//Creamos un elemento option
      // const body = document.getElementsByTagName("body")[0];//Obtenemos el elemento body de nuestro html
      // body.appendChild(selectHidden);//Agregamos el objeto selectHidden creado al body del html
      // optionHidden.innerText = event.selectedOptions[0].innerText;//Se agrega a la propiedad innerHTML del optionCreado el valor seleccionado del selector al cual se le cambiará el tamaño
      // selectHidden.appendChild(optionHidden);//Se agrega el optionHidden al selectHidden
      // event.style.width = `${selectHidden.clientWidth + 5}px`;//Cambiamos el ancho(width) del selector conforme al tamaño de selectHidden
      // body.removeChild(selectHidden);//Eliminamos selectHidden del body del html
    }
  </script>
</html>
